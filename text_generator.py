dictionary = {
    "A": (
        (1, 0),
        (2, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (3, 2),
        (0, 3),
        (3, 3),
        (0, 4),
        (3, 4),
    ),
    "B": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (0, 3),
        (3, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "C": ((1, 0), (2, 0), (0, 1), (3, 1), (0, 2), (0, 3), (3, 3), (1, 4), (2, 4)),
    "D": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (3, 2),
        (0, 3),
        (3, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "E": (
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (3, 2),
        (0, 3),
        (0, 4),
        (1, 4),
        (2, 4),
        (3, 4),
    ),
    "F": (
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (3, 2),
        (0, 3),
        (0, 4),
    ),
    "G": (
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 1),
        (0, 2),
        (2, 2),
        (3, 2),
        (4, 2),
        (0, 3),
        (4, 3),
        (1, 4),
        (2, 4),
        (3, 4),
    ),
    "H": (
        (0, 0),
        (3, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (3, 2),
        (0, 3),
        (3, 3),
        (0, 4),
        (3, 4),
    ),
    "I": ((0, 0), (0, 1), (0, 2), (0, 3), (0, 4)),
    "K": (
        (0, 0),
        (3, 0),
        (0, 1),
        (2, 1),
        (0, 2),
        (1, 2),
        (0, 3),
        (2, 3),
        (0, 4),
        (3, 4),
    ),
    "L": ((0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 4), (2, 4), (3, 4)),
    "M": (
        (0, 0),
        (4, 0),
        (0, 1),
        (1, 1),
        (3, 1),
        (4, 1),
        (0, 2),
        (2, 2),
        (4, 2),
        (0, 3),
        (4, 3),
        (0, 4),
        (4, 4),
    ),
    "N": (
        (0, 0),
        (3, 0),
        (0, 1),
        (1, 1),
        (3, 1),
        (0, 2),
        (2, 2),
        (3, 2),
        (0, 3),
        (3, 3),
        (0, 4),
        (3, 4),
    ),
    "O": (
        (1, 0),
        (2, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (3, 2),
        (0, 3),
        (3, 3),
        (1, 4),
        (2, 4),
    ),
    "P": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (0, 3),
        (0, 4),
    ),
    "Q": (
        (1, 0),
        (2, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (3, 2),
        (0, 3),
        (2, 3),
        (3, 3),
        (1, 4),
        (2, 4),
        (4, 4),
    ),
    "R": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (0, 3),
        (2, 3),
        (0, 4),
        (3, 4),
    ),
    "S": (
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (3, 2),
        (3, 3),
        (0, 4),
        (1, 4),
        (2, 4),
        (3, 4),
    ),
    "T": ((0, 0), (1, 0), (2, 0), (1, 1), (1, 2), (1, 3), (1, 4)),
    "U": (
        (0, 0),
        (3, 0),
        (0, 1),
        (3, 1),
        (0, 2),
        (3, 2),
        (0, 3),
        (3, 3),
        (1, 4),
        (2, 4),
    ),
    "V": ((0, 0), (4, 0), (0, 1), (4, 1), (0, 2), (4, 2), (1, 3), (3, 3), (2, 4)),
    "W": (
        (0, 0),
        (4, 0),
        (0, 1),
        (4, 1),
        (0, 2),
        (4, 2),
        (0, 3),
        (2, 3),
        (4, 3),
        (1, 4),
        (3, 4),
    ),
    "X": ((0, 0), (2, 0), (0, 1), (2, 1), (1, 2), (0, 3), (2, 3), (0, 4), (2, 4)),
    "Y": ((0, 0), (2, 0), (0, 1), (2, 1), (1, 2), (1, 3), (1, 4)),
    "Z": ((0, 0), (1, 0), (2, 0), (2, 1), (1, 2), (0, 3), (0, 4), (1, 4), (2, 4)),
    "J": ((0, 0), (1, 0), (2, 0), (2, 1), (2, 2), (0, 3), (2, 3), (1, 4)),
    "1": ((1, 0), (0, 1), (1, 1), (1, 2), (1, 3), (0, 4), (1, 4), (2, 4)),
    "2": (
        (0, 0),
        (1, 0),
        (2, 0),
        (2, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (0, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "3": (
        (0, 0),
        (1, 0),
        (2, 0),
        (2, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (2, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "4": ((0, 0), (2, 0), (0, 1), (2, 1), (0, 2), (1, 2), (2, 2), (2, 3), (2, 4)),
    "5": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (2, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "6": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (0, 3),
        (2, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "7": ((0, 0), (1, 0), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4)),
    "8": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (2, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (0, 3),
        (2, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "9": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (2, 1),
        (0, 2),
        (1, 2),
        (2, 2),
        (2, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "0": (
        (0, 0),
        (1, 0),
        (2, 0),
        (0, 1),
        (2, 1),
        (0, 2),
        (2, 2),
        (0, 3),
        (2, 3),
        (0, 4),
        (1, 4),
        (2, 4),
    ),
    "-": ((0, 2), (1, 2), (2, 2), (3, 2), (4, 2)),
    ":": ((0, 0), (0, 1), (0, 3), (0, 4), (1, 0), (1, 1), (1, 3), (1, 4)),
    "%": (
        (0, 3),
        (0, 4),
        (1, 3),
        (1, 4),
        (3, 0),
        (3, 2),
        (3, 5),
        (3, 7),
        (4, 0),
        (4, 3),
        (4, 4),
        (4, 7),
        (5, 1),
        (5, 6),
        (6, 2),
        (6, 3),
        (6, 4),
        (6, 5),
    ),
    " ": None,
}

string = "LAP"  # Type in the string you want to display
string = string.upper()

center_align = False  # True / False
# The position of the starting bit (upper left most is (0,0), lower right most is (95,63))

# currentx = 20 # Starting x (0 <= x <= 95)
# currenty = 10 # Starting y (0 <= y <= 63)


if not center_align:

    # The position of the starting bit (upper left most is (0,0), lower right most is (95,63))
    currentx = 18  # Starting x (0 <= x <= 95)
    currenty = 53  # Starting y (0 <= y <= 63)

    print("Verilog logic: \n")
    logic = "("

    for i in range(len(string)):
        if string[i] != " ":
            listx = list(x[0] for x in dictionary[string[i]])
            for j in dictionary.get(string[i]):
                logic += "(x == {} && y == {}) || \n".format(
                    (j[0] + currentx), (j[1] + currenty)
                )

            currentx += max(listx) + 2
        else:
            currentx += 1

    logic = logic[:-4] + ")"
    print(logic)

else:
    # The position of the starting bit (vertical)
    currenty = 10  # Starting y (0 <= y <= 63)

    # calculate string width
    width = 0
    for i in range(len(string)):
        if string[i] != " ":
            listx = list(x[0] for x in dictionary[string[i]])
            width += max(listx) + 2
        else:
            width += 1

    currentx = int((95 - width) / 2) + 1

    print("Verilog logic: \n")
    logic = "("

    for i in range(len(string)):
        if string[i] != " ":
            listx = list(x[0] for x in dictionary[string[i]])
            for j in dictionary.get(string[i]):
                logic += "(x == {} && y == {}) || \n".format(
                    (j[0] + currentx), (j[1] + currenty)
                )

            currentx += max(listx) + 2
        else:
            currentx += 1

    logic = logic[:-4] + ")"
    print(logic)
